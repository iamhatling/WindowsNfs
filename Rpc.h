#pragma once

#define RPC_LAST_FRAGMENT_FLAG 0x80000000

#define RPC_MESSAGE_TYPE_CALL  0
#define RPC_MESSAGE_TYPE_REPLY 1

// NOTE: uncommenting this causes a problem in the microsoft header file
//#define RPC_VERSION         2

#define RPC_PROGRAM_PORTMAP 100000
#define RPC_PROGRAM_NFS     100003
#define RPC_PROGRAM_MOUNT   100005

#define RPC_REPLY_ACCEPTED 0
#define RPC_REPLY_DENIED   1

#define RPC_REPLY_ACCEPT_STATUS_SUCCESS       0
#define RPC_REPLY_ACCEPT_STATUS_PROG_UNAVAIL  1 // program not found
#define RPC_REPLY_ACCEPT_STATUS_PROG_MISMATCH 2 // program does not support this version
#define RPC_REPLY_ACCEPT_STATUS_PROC_UNAVAIL  3 // program doesn't support procedure
#define RPC_REPLY_ACCEPT_STATUS_GARBAGE_ARGS  4 // program can't decode params

#define RPC_REJECT_STATUS_RPC_MISMATCH 0 // rpc version number != 2
#define RPC_REJECT_STATUS_AUTH_ERROR   1 // can't authenticate caller

#define RPC_AUTH_FLAVOR_NULL 0

// This should always be 0, no need for a network order
#define PROC_NULL 0

#define PORTMAP_PROC_GETPORT 3

#define MOUNT3_STATUS_OK   0
#define MOUNT3_ERROR_NOENT 2

#define MOUNT3_PROC_MNT     1
#define MOUNT3_PROC_DUMP    2
#define MOUNT3_PROC_UMNT    3
#define MOUNT3_PROC_UMNTALL 4
#define MOUNT3_PROC_EXPORT  5

#define NFS3_STATUS_OK        0
#define NFS3_ERROR_BADHANDLE  100001

#define NFS3_PROC_GETATTR     1
#define NFS3_PROC_SETATTR     2
#define NFS3_PROC_LOOKUP      3
#define NFS3_PROC_ACCESS      4
#define NFS3_PROC_READLINK    5
#define NFS3_PROC_READ        6
#define NFS3_PROC_WRITE       7
#define NFS3_PROC_CREATE      8
#define NFS3_PROC_MKDIR       9
#define NFS3_PROC_SYMLINK     10
#define NFS3_PROC_MKNOD       11
#define NFS3_PROC_REMOVE      12
#define NFS3_PROC_RMDIR       13
#define NFS3_PROC_RENAME      14
#define NFS3_PROC_LINK        15
#define NFS3_PROC_READDIR     16
#define NFS3_PROC_READDIRPLUS 17
#define NFS3_PROC_FSSTAT      18
#define NFS3_PROC_FSINFO      19
#define NFS3_PROC_PATHCONF    20
#define NFS3_PROC_COMMIT      21

#define NFS3_FILE_TYPE_REG  1
#define NFS3_FILE_TYPE_DIR  2

//
// Network Order Constants
//
#if LITTLE_ENDIAN
    #define _1_NETWORK_ORDER       0x01000000
    #define _2_NETWORK_ORDER       0x02000000
    #define _3_NETWORK_ORDER       0x03000000
    #define _4_NETWORK_ORDER       0x04000000
    #define _19_NETWORK_ORDER      0x13000000
    #define _100000_NETWORK_ORDER  0xA0860100
    #define _100001_NETWORK_ORDER  0xA1860100
    #define _100002_NETWORK_ORDER  0xA2860100
    #define _100003_NETWORK_ORDER  0xA3860100
    #define _100004_NETWORK_ORDER  0xA4860100
    #define _100005_NETWORK_ORDER  0xA5860100
#elif BIG_ENDIAN
    #define _1_NETWORK_ORDER       0x00000001
    #define _2_NETWORK_ORDER       0x00000002
    #define _3_NETWORK_ORDER       0x00000003
    #define _4_NETWORK_ORDER       0x00000004
    #define _19_NETWORK_ORDER      0x00000013
    #define _100000_NETWORK_ORDER  0x000186A0
    #define _100001_NETWORK_ORDER  0x000186A1
    #define _100002_NETWORK_ORDER  0x000186A2
    #define _100003_NETWORK_ORDER  0x000186A3
    #define _100004_NETWORK_ORDER  0x000186A4
    #define _100005_NETWORK_ORDER  0x000186A5
#else
    #error Need to define LITTLE_ENDIAN or BIG_ENDIAN
#endif

#define RPC_MESSAGE_TYPE_CALL_NETWORK_ORDER     0
#define RPC_MESSAGE_TYPE_REPLY_NETWORK_ORDER    _1_NETWORK_ORDER

#define RPC_PROGRAM_PORTMAP_NETWORK_ORDER       _100000_NETWORK_ORDER
#define RPC_PROGRAM_NFS_NETWORK_ORDER           _100003_NETWORK_ORDER
#define RPC_PROGRAM_MOUNT_NETWORK_ORDER         _100005_NETWORK_ORDER

#define RPC_VERSION_NETWORK_ORDER               _2_NETWORK_ORDER

#define RPC_REPLY_ACCEPTED_NETWORK_ORDER        0
#define RPC_REPLY_DENIED_NETWORK_ORDER          _1_NETWORK_ORDER

#define RPC_REPLY_ACCEPT_STATUS_SUCCESS_NETWORK_ORDER       0
#define RPC_REPLY_ACCEPT_STATUS_PROG_UNAVAIL_NETWORK_ORDER  _1_NETWORK_ORDER // program not found
#define RPC_REPLY_ACCEPT_STATUS_PROG_MISMATCH_NETWORK_ORDER _2_NETWORK_ORDER // program does not support this version
#define RPC_REPLY_ACCEPT_STATUS_PROC_UNAVAIL_NETWORK_ORDER  _3_NETWORK_ORDER // program doesn't support procedure
#define RPC_REPLY_ACCEPT_STATUS_GARBAGE_ARGS_NETWORK_ORDER  _4_NETWORK_ORDER // program can't decode params

#define RPC_AUTH_FLAVOR_NULL_NETWORK_ORDER      0
#define NFS3_PROC_NULL_NETWORK_ORDER            0

#define RPC_REPLY_ACCEPT_STATUS_PROG_MISMATCH_NETWORK_ORDER _2_NETWORK_ORDER



#define MOUNT3_STATUS_OK_NETWORK_ORDER      0
#define MOUNT3_ERROR_NOENT_NETWORK_ORDER    _2_NETWORK_ORDER

#define NFS3_STATUS_OK_NETWORK_ORDER 0
#define NFS3_ERROR_BADHANDLE_NETWORK_ORDER  _100001_NETWORK_ORDER

#define NFS3_PROC_GETATTR_NETWORK_ORDER     _1_NETWORK_ORDER
#define NFS3_PROC_SETATTR_NETWORK_ORDER     _2_NETWORK_ORDER
#define NFS3_PROC_LOOKUP_NETWORK_ORDER      _3_NETWORK_ORDER
#define NFS3_PROC_ACCESS_NETWORK_ORDER      _4_NETWORK_ORDER
#define NFS3_PROC_READLINK_NETWORK_ORDER    _5_NETWORK_ORDER
#define NFS3_PROC_READ_NETWORK_ORDER        _6_NETWORK_ORDER
#define NFS3_PROC_WRITE_NETWORK_ORDER       _7_NETWORK_ORDER
#define NFS3_PROC_CREATE_NETWORK_ORDER      _8_NETWORK_ORDER
#define NFS3_PROC_MKDIR_NETWORK_ORDER       _9_NETWORK_ORDER
#define NFS3_PROC_SYMLINK_NETWORK_ORDER     _10_NETWORK_ORDER
#define NFS3_PROC_MKNOD_NETWORK_ORDER       _11_NETWORK_ORDER
#define NFS3_PROC_REMOVE_NETWORK_ORDER      _12_NETWORK_ORDER
#define NFS3_PROC_RMDIR_NETWORK_ORDER       _13_NETWORK_ORDER
#define NFS3_PROC_RENAME_NETWORK_ORDER      _14_NETWORK_ORDER
#define NFS3_PROC_LINK_NETWORK_ORDER        _15_NETWORK_ORDER
#define NFS3_PROC_READDIR_NETWORK_ORDER     _16_NETWORK_ORDER
#define NFS3_PROC_READDIRPLUS_NETWORK_ORDER _17_NETWORK_ORDER
#define NFS3_PROC_FSSTAT_NETWORK_ORDER      _18_NETWORK_ORDER
#define NFS3_PROC_FSINFO_NETWORK_ORDER      _19_NETWORK_ORDER
#define NFS3_PROC_PATHCONF_NETWORK_ORDER    _20_NETWORK_ORDER
#define NFS3_PROC_COMMIT_NETWORK_ORDER      _21_NETWORK_ORDER

#define NFS3_FILE_TYPE_REG_NETWORK_ORDER    _1_NETWORK_ORDER
#define NFS3_FILE_TYPE_DIR_NETWORK_ORDER    _2_NETWORK_ORDER

//
// Operations           | Speed  | Works On
// ---------------------|--------|-------------
// SET_UINT/GET_UINT    | Faster | Network Order Values
// ParseUint/AppendUint | Slower | Host Order Values
//
#define SET_UINT(buffer, value) *((UINT*)(buffer)) = value
#define GET_UINT(buffer) *((UINT*)(buffer))
UINT ParseUint(char* buffer);
void AppendUint(char* buffer, UINT value);


